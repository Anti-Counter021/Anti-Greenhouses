version: "3.7"

services:
  postgres:
    container_name: postgres
    image: postgres
    env_file:
      - configs/config.docker.db.env
    ports:
      - "5431:5431"

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq
    env_file:
      - configs/config.docker.worker.env
    ports:
      - "5672:5672"

  api:
    container_name: api
    build:
      context: ./
      dockerfile: Dockerfile
    depends_on:
      - postgres
    ports:
      - "8000:8000"
    command: make server
    volumes:
      - ./:/app
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - CELERY_HOST=rabbitmq
      - CELERY_PORT=5672
      - CELERY_RESULT=rpc://
    env_file:
      - configs/config.app.env
      - configs/config.db.env
      - configs/config.celery.env
      - configs/config.email.env

  worker:
    container_name: worker
    build:
      context: ./
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - api
    command: make worker
    volumes:
      - ./:/app
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - CELERY_HOST=rabbitmq
      - CELERY_PORT=5672
      - CELERY_RESULT=rpc://
    env_file:
      - configs/config.app.env
      - configs/config.db.env
      - configs/config.celery.env
      - configs/config.email.env

  # For development
  flower:
    container_name: flower
    build:
      context: ./
      dockerfile: Dockerfile
    depends_on:
      - worker
    ports:
      - "5555:5555"
    command: make flower
    volumes:
      - ./:/app
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - CELERY_HOST=rabbitmq
      - CELERY_PORT=5672
      - CELERY_RESULT=rpc://
    env_file:
      - configs/config.app.env
      - configs/config.db.env
      - configs/config.celery.env
      - configs/config.email.env
